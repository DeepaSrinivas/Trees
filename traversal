Given An array of integers of size n we need to create a binary tree and print the preorder ,inorder and post order traversal





#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
    int data;
    Node *left,*right;
    Node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
};
Node* insert(Node* root,int ele){         //creating a binary tree 
    if(root==NULL){
        return new Node(ele);
    }
    if(root->data<ele){
        root->right=insert(root->right,ele);
    }
    if(root->data>ele){
        root->left=insert(root->left,ele);
    }
    return root;
}
void preOrder(Node *root){  //preorder traversel first we print data and then we visit left later right
    if(root==NULL){
        return;
    }
    cout<<root->data<<" ";
    preOrder(root->left);
    preOrder(root->right);
}
void inOrder(Node *root){  // inorder traversal first we visit left and then print data and later visit right
    if(root==NULL){
        return;
    }
    inOrder(root->left);
    cout<<root->data<<" ";
    inOrder(root->right);
}
void postOrder(Node *root){  // post order traversel first we visit left and then later right and then print the data
    if(root==NULL){
        return;
    }
    postOrder(root->left);
    postOrder(root->right);
    cout<<root->data<<" ";
}

int main(){
    int t;
    cin>>t;
    int n;
    while(t--){
        cin>>n;
        int ar[n];
        Node *root = NULL;
        for(int i=0;i<n;i++){
            cin>>ar[i];
            root = insert(root,ar[i]);
        }
        preOrder(root);
        cout<<"\n";
        inOrder(root);
        cout<<"\n";
        postOrder(root);
        cout<<"\n";
        cout<<"\n";
    }
    return 0;
}
